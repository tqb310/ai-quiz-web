generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account?
  sessions      Session[]
  games         Game[]
}

model Account {
  id                       String   @id @default(cuid())
  userId                   String   @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?  @db.Text
  access_token             String?  @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?  @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  user                     User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

enum GameType {
  MCQ
  OPEN_ENDED
}

model Game {
  id            String @id @default(cuid())
  userId        String
  gameType      GameType
  topic         String
  timeStarted   DateTime
  timeEnded     DateTime?
  questions     Question[]
  user          User   @relation(fields: [userId], references: [id])
  @@index([userId], name: "userId")
}

model Question {
  id                  String @id @default(cuid())
  gameId              String
  question            String
  answer              String
  options             Json? @db.Json
  percentageCorrect   Float?
  isCorrect           Boolean?
  questionType        GameType
  userAnswer          String? @db.Text
  game                Game   @relation(fields: [gameId], references: [id])
  @@index([gameId], name: "gameId")
  @@index([id], name: "id")
}